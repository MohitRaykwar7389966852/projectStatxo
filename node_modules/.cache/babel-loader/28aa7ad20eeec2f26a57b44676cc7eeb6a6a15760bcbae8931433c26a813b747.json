{"ast":null,"code":"var _jsxFileName = \"F:\\\\FunctionUp\\\\statxo\\\\src\\\\component\\\\addExcel.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { useState } from 'react';\nimport * as XLSX from \"xlsx\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Navbar from './navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddExcel() {\n  _s();\n  //excel file state\n  const [excel, setExcel] = useState('');\n  function handleChange(e) {\n    const files = e.target.files[0];\n    setExcel(files);\n  }\n  //upload fucntion\n  function upload(e) {\n    e.preventDefault();\n    let f = excel;\n    const reader = new FileReader();\n    reader.onload = evt => {\n      /* Parse data */\n      const bstr = evt.target.result;\n      const wb = XLSX.read(bstr, {\n        type: \"array\"\n      });\n      /* Get first worksheet */\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      /* Convert array of arrays */\n      const data = XLSX.utils.sheet_to_json(ws);\n      /* Update state */\n      console.log(data);\n\n      //axios call to send data in backend\n      let success = 0;\n      let fail = 0;\n      data.map((i, index) => {\n        console.log(i);\n        axios.post('http://localhost:4000/addExcel', i, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(res => {\n          console.log(res);\n          success++;\n          if (success === data.length) {\n            toast.success(\"Excel File All Data Saved Successfully\", {\n              position: toast.POSITION.TOP_CENTER\n            });\n          }\n        }).catch(error => {\n          fail++;\n          console.log(error.message);\n          if (fail === data.length) {\n            toast.error(\"Failed To Saved Excel File Data\", {\n              position: toast.POSITION.TOP_CENTER\n            });\n          }\n        });\n      });\n    };\n    reader.readAsArrayBuffer(f);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      class: \"m-5\",\n      onSubmit: upload,\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"exampleInputEmail1\",\n          class: \"form-label\",\n          children: \"Upload Excel File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"excelfile\",\n          class: \"form-control\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-text\",\n          children: \"select excel file and upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        class: \"btn btn-primary\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n_s(AddExcel, \"zkYuAewLfYrHdo7a3eMYjGSDyDs=\");\n_c = AddExcel;\nexport default AddExcel;\nvar _c;\n$RefreshReg$(_c, \"AddExcel\");","map":{"version":3,"names":["useState","XLSX","axios","ToastContainer","toast","Navbar","AddExcel","excel","setExcel","handleChange","e","files","target","upload","preventDefault","f","reader","FileReader","onload","evt","bstr","result","wb","read","type","wsname","SheetNames","ws","Sheets","data","utils","sheet_to_json","console","log","success","fail","map","i","index","post","headers","then","res","length","position","POSITION","TOP_CENTER","catch","error","message","readAsArrayBuffer"],"sources":["F:/FunctionUp/statxo/src/component/addExcel.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\r\nimport { useState } from 'react';\r\nimport * as XLSX from \"xlsx\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Navbar from './navbar';\r\n\r\nfunction AddExcel() {\r\n\r\n    //excel file state\r\n    const [excel, setExcel] = useState('');\r\n\r\n    function handleChange(e) {\r\n        const files = e.target.files[0];\r\n        setExcel(files);\r\n    }\r\n    //upload fucntion\r\n    function upload(e) {\r\n        e.preventDefault()\r\n\r\n        let f = excel\r\n        const reader = new FileReader();\r\n        reader.onload = (evt) => {\r\n            /* Parse data */\r\n            const bstr = evt.target.result;\r\n            const wb = XLSX.read(bstr, { type: \"array\" });\r\n            /* Get first worksheet */\r\n            const wsname = wb.SheetNames[0];\r\n            const ws = wb.Sheets[wsname];\r\n            /* Convert array of arrays */\r\n            const data = XLSX.utils.sheet_to_json(ws);\r\n            /* Update state */\r\n            console.log(data);\r\n\r\n            //axios call to send data in backend\r\n            let success = 0\r\n            let fail = 0\r\n\r\n            data.map((i, index) => {\r\n                console.log(i)\r\n                axios.post('http://localhost:4000/addExcel', i,\r\n                    {\r\n                        headers: { 'Content-Type': 'application/json' }\r\n                    }).then(res => {\r\n                        console.log(res)\r\n                        success++\r\n\r\n                        if (success === data.length) {\r\n                            toast.success(\"Excel File All Data Saved Successfully\", {\r\n                                position: toast.POSITION.TOP_CENTER\r\n                            });\r\n                        }\r\n\r\n                    }).catch(error => {\r\n                        fail++\r\n                        console.log(error.message)\r\n\r\n                        if (fail === data.length) {\r\n                            toast.error(\"Failed To Saved Excel File Data\", {\r\n                                position: toast.POSITION.TOP_CENTER\r\n                            });\r\n                        }\r\n                    })\r\n            })\r\n        };\r\n        reader.readAsArrayBuffer(f);\r\n    }\r\n    return (\r\n        <div>\r\n            {<Navbar/>}\r\n            <form class=\"m-5\" onSubmit={upload} encType=\"multipart/form-data\">\r\n                <div class=\"mb-3\">\r\n                    <label for=\"exampleInputEmail1\" class=\"form-label\">Upload Excel File</label>\r\n                    <input type=\"file\" name='excelfile' class=\"form-control\" onChange={handleChange}></input>\r\n                    <div class=\"form-text\">select excel file and upload</div>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary\">Upload</button>\r\n            </form>\r\n            {<ToastContainer />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddExcel;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}