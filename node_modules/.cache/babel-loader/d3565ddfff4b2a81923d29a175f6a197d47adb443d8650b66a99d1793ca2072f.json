{"ast":null,"code":"var _jsxFileName = \"F:\\\\FunctionUp\\\\statxo\\\\src\\\\component\\\\editExcel.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.css';\nimport axios from \"axios\";\nimport Navbar from './navbar';\nimport { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GetExcel() {\n  _s();\n  const [list, setList] = useState('');\n  const [msg, setMsg] = useState('');\n  const [status, setStatus] = useState('');\n  const [postyear, setPY] = useState('');\n  const [postmonth, setPM] = useState('');\n  const [acType, setAT] = useState('');\n  const [acName, setAN] = useState('');\n  function clear(e) {\n    setStatus('');\n    setPY('');\n    setPM('');\n    dataLoad();\n  }\n  function edit(e) {\n    let editId = e.target.value;\n    console.log(editId);\n    let data = {};\n    if (acName) data.ActionName = acName;\n    if (acType) data.ActionType = acType;\n    console.log(acName, acType);\n    axios.put('http://localhost:4000/editExcel/' + editId, data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      console.log(res.data);\n    });\n    // dataLoad()\n  }\n\n  function filter(e) {\n    e.preventDefault();\n    axios.get('http://localhost:4000/getExcel?Status=' + status + \"&PostingYear=\" + postyear + \"&PostingMonth=\" + postmonth).then(res => {\n      console.log(res.data);\n      let arr = res.data.data;\n      if (arr.length != 0) {\n        setList(arr);\n        setMsg('');\n      } else {\n        setMsg(\"No Data Available To Show\");\n        setList('');\n      }\n    });\n  }\n  let dataLoad = async () => {\n    await axios.get('http://localhost:4000/getExcel').then(res => {\n      console.log(res.data);\n      let arr = res.data.data;\n      if (arr.length != 0) {\n        setList(arr);\n        setMsg('');\n      } else {\n        setMsg(\"No Data Available To Show\");\n        setList('');\n      }\n    }).catch(error => {\n      console.log(error.message);\n    });\n  };\n  useEffect(dataLoad, []);\n  let array = [...list];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"fdvgefbfg\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n_s(GetExcel, \"cWhjzrRNMBv55M6eLRGSlkfO+0Q=\");\n_c = GetExcel;\nexport default EditExcel;\nvar _c;\n$RefreshReg$(_c, \"GetExcel\");","map":{"version":3,"names":["axios","Navbar","useState","useEffect","Link","GetExcel","list","setList","msg","setMsg","status","setStatus","postyear","setPY","postmonth","setPM","acType","setAT","acName","setAN","clear","e","dataLoad","edit","editId","target","value","console","log","data","ActionName","ActionType","put","headers","then","res","filter","preventDefault","get","arr","length","catch","error","message","array","EditExcel"],"sources":["F:/FunctionUp/statxo/src/component/editExcel.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\r\nimport axios from \"axios\";\r\nimport Navbar from './navbar';\r\nimport { useState, useEffect } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction GetExcel() {\r\n\r\n    const [list, setList] = useState('');\r\n\r\n    const [msg, setMsg] = useState('');\r\n\r\n    const [status, setStatus] = useState('');\r\n    const [postyear, setPY] = useState('');\r\n    const [postmonth, setPM] = useState('');\r\n\r\n    const [acType, setAT] = useState('');\r\n    const [acName, setAN] = useState('');\r\n\r\n    function clear(e){\r\n        setStatus('')\r\n        setPY('')\r\n        setPM('')\r\n        dataLoad()\r\n    }\r\n\r\n    function edit(e){\r\n        let editId = e.target.value\r\n        console.log(editId)\r\n        let data = {}\r\n        if(acName) data.ActionName = acName\r\n        if(acType) data.ActionType = acType\r\n        console.log(acName,acType)\r\n\r\n        axios.put('http://localhost:4000/editExcel/'+editId,data,\r\n                    {\r\n                        headers: { 'Content-Type': 'application/json' }\r\n                    }).then(res => {\r\n                        console.log(res.data)\r\n                    })\r\n                // dataLoad()\r\n    }\r\n\r\n     function filter(e){\r\n        e.preventDefault()\r\n\r\n         axios.get('http://localhost:4000/getExcel?Status='+status+\"&PostingYear=\"+postyear+\"&PostingMonth=\"+postmonth)\r\n            .then(res => {\r\n                console.log(res.data)\r\n                let arr = res.data.data\r\n                if(arr.length != 0){\r\n                    setList(arr)\r\n                    setMsg('')\r\n                }else{\r\n                    setMsg(\"No Data Available To Show\")\r\n                    setList('')\r\n                } \r\n                \r\n            })\r\n    }\r\n\r\n    let dataLoad = async () => {\r\n        await axios.get('http://localhost:4000/getExcel')\r\n            .then(res => {\r\n                console.log(res.data)\r\n                let arr = res.data.data\r\n                if(arr.length!=0){\r\n                     setList(arr)\r\n                     setMsg('')\r\n                    }\r\n                else {\r\n                    setMsg(\"No Data Available To Show\")\r\n                    setList('')\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(error.message)\r\n            })\r\n        }\r\n\r\n    useEffect(dataLoad\r\n    , [])\r\n\r\n    let array = [...list]\r\n\r\n    return (\r\n        <div>fdvgefbfg\r\n           </div>\r\n    );\r\n}\r\n\r\nexport default EditExcel;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}